
name: build-push-stage

on:
  push:
    branches:
      - master
      - feature/*
    repository_dispatch:
        types: run-workflow
  pull_request:
    branches: [ develop ]
    

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '11'

    - name: Set app version
      run: |
        export APP_VERSION="$(grep "version" build.gradle | awk 'NR==2{ split($3,a,"'\''"); print tolower(a[2]) }')"
        echo $APP_VERSION >> app_version.txt
        echo "::set-env name=VERSION_NAME::$APP_VERSION"
    - uses: actions/upload-artifact@v2
      with:
        name: app_version
        path: app_version.txt

    - name: Create Firebase account file
      run: |
        mkdir src/main/resources/config
        touch src/main/resources/config/${{ secrets.FIREBASE_ACCOUNT_FILE }}
        echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" >> src/main/resources/config/${{ secrets.FIREBASE_ACCOUNT_FILE }}

    - name: Gradle build
      uses: eskatos/gradle-command-action@v1
      with:
        arguments: bootJar

    - name: Build Docker image
      uses: docker/build-push-action@v1.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: laerdh/recieppy-api
        tags: ${{ env.VERSION_NAME }}

  push:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Get app version
      uses: actions/download-artifact@v2
      with:
        name: app_version
    - shell: bash
      run: |
        export APP_VERSION=`cat app_version.txt`
        echo "::set-env name=VERSION_NAME::$APP_VERSION"
    
    - name: Deploy to test
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: ${{ secrets.SSH_DEPLOY_TEST }} -r ${{ secrets.DOCKER_USERNAME }} -t ${{ secrets.DOCKER_PASSWORD }} -i {{ env.VERSION_NAME }} -l ${{ secrets.DATABASE_URL_TEST }} -d ${{ secrets.DATABASE_SCHEMA_TEST }} -u ${{ secrets.DATABASE_USER_TEST }} -p ${{ secrets.DATABASE_PASSWORD_TEST }} -v ${{ secrets.OIDC_JWT_ENDPOINT }}