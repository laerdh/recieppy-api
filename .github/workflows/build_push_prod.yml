
name: build-push-prod

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      VERSION_NAME: ${{ steps.set-version.outputs.VERSION_NAME }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Set version
      id: set-version
      run: |
        export APP_VERSION="$(grep "version" build.gradle | awk 'NR==2{ split($3,a,"'\''"); print tolower(a[2]) }')"
        echo "VERSION_NAME=${APP_VERSION}" >> "$GITHUB_OUTPUT"

    - shell: bash
      run: mkdir src/main/resources/config

    - name: Fetch Firebase Service Account file
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
        chmod 700 ~/.ssh/id_rsa
        eval $(ssh-agent -s)
        ssh-add ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        scp ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.FIREBASE_SERVICE_ACCOUNT_FILE_PATH }} src/main/resources/config

    - name: Gradle build
      uses: eskatos/gradle-command-action@v1
      with:
        arguments: bootJar

    - name: Build Docker image
      uses: docker/build-push-action@v1.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: laerdh/recieppy-api
        tags: ${{ steps.set-version.outputs.VERSION_NAME }}

  push:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to prod
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          ${{ secrets.SSH_DEPLOY }} \
          ${{ secrets.DOCKER_USERNAME }} \
          ${{ secrets.DOCKER_PASSWORD }} \
          ${{ needs.build.outputs.VERSION_NAME }} \
          ${{ secrets.DATABASE_URL }} \
          ${{ secrets.DATABASE_SCHEMA }} \
          ${{ secrets.DATABASE_USER }} \
          ${{ secrets.DATABASE_PASSWORD }} \
          ${{ secrets.OAUTH2_ISSUER_URI }} \
          ${{ secrets.OAUTH2_JWK_URI }} \
          ${{ secrets.SUPABASE_ISSUER_URI }} \
          ${{ secrets.SUPABASE_JWT_SECRET }} \
          ${{ secrets.UNSPLASH_API_KEY }}